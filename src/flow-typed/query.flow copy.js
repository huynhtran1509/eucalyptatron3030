/**
 * Flowtype definitions for query
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.2.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export type FacebookUserID = {
    type: facebook,
    ID: string
};
declare export type UserID = FacebookUserID;
declare export type PostbackPayload = {
    query: string,
    intents: {
        intent: LuisIntentEnum,
        score: 1
    }[],
    entities: {
        type: string,
        entity: string
    }[]
};
declare export type LuisRequest = {
    user - id?: UserID,
    epoch?: number,
    payload - type: luis,
    payload: ILuisData,
    facets?: any,
    utterance?: string
};
declare export type PostbackRequest = {
    payload - type: postback,
    user - id?: UserID,
    epoch?: number,
    facets?: any,
    payload: PostbackPayload
};
declare export type MagicNlpRequest = LuisRequest | PostbackRequest;
declare export type showtimes = {
    payload - type: showtimes,
    utterance: string
};
declare export type movieInfo = {
    payload - type: movie - info,
    utterance: string
};
declare export type MagicNlpResult = showtimes | movieInfo;
declare export type MagicNlpLuisResponse = {
    epoch: number,
    mnlp - lambda - timestamp: string,
    payload: ILuisData,
    payload - type: luis,
    result - aux: any,
    result - payload: MagicNlpResult,
    result - payload - type: showtimes | movie - info,
    user - id: UserID,
    utterance: string
};
declare export type MagicNlpPostbackResponse = {
    epoch: number,
    mnlp - lambda - timestamp: string,
    payload: ILuisData,
    payload - type: postback,
    facets?: any,
    result - aux: any,
    result - payload: MagicNlpResult,
    result - payload - type: showtimes | movie - info,
    user - id?: UserID,
    utterance: string
};
declare export type MagicNlpResponse = MagicNlpLuisResponse | MagicNlpPostbackResponse;
declare export default function query(requestPayload: MagicNlpRequest): Promise<MagicNlpResponse >